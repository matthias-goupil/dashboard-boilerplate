version: '3.8'

services:
  app:
    build:
      context: ./next-app
      target: runner # Utilisation du mode production
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      HOSTNAME: 0.0.0.0
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-mydatabase}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ENDPOINT: http://minio:9000
    restart: unless-stopped
    depends_on:
      - db
      - minio
    networks:
      - app-network
  
  app-dev:
    build:
      context: ./next-app
      target: dev # Utilisation du mode développement
    ports:
      - "3000:3000"
    volumes:
      - ./next-app:/app # Montage du code source pour le hot reload
      - /app/node_modules # Évite les conflits avec les modules locaux
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-mydatabase}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ENDPOINT: http://minio:9000
    depends_on:
      - db
      - minio
      - adminer
    command: ["npm", "run", "dev"]
    networks:
      - app-network
    
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: postgres-admin
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - app-network
  
  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # Interface web
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    networks:
      - app-network
    volumes:
      - minio-data:/data

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  minio-data:
